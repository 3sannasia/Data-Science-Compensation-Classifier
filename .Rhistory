split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence != "US", employment_type = "FT")
head(salary_data)
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence = "US", employment_type = "FT")
head(salary_data)
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence = "US"  & employment_type = "FT")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data_filtered = subset(salary_data, employee_residence = "US"  & employment_type = "FT")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data_filtered = subset(salary_data, employee_residence= "US" & employment_type = "FT")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data_filtered = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data_filtered)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data)
summary(salary_data)
head(salary_data)
split <- sample.split(mtcars, SplitRatio = 0.8)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data$salary_in_usd <- ifelse(salary_data$salary_in_usd>=100000, 1, 0)
salary_data_filtered = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data_filtered)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
head(salary_data_raw)
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
summary(salary_data_unfiltered)
head(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
logistic_model
# Summary
summary(logistic_model)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
# Summary
summary(logistic_model)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
# Summary
summary(logistic_model)
predict_reg <- predict(logistic_model,
test_reg, type = "response")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
# Summary
summary(logistic_model)
predict_reg <- predict(logistic_model,
test_reg, type = "response")
predict_reg
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
# Summary
summary(logistic_model)
predict_reg <- predict(logistic_model,
test_reg, type = "response")
predict_reg
predict_reg <- ifelse(predict_reg >0.5, 1, 0)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg,
family = "binomial")
# Summary
summary(logistic_model)
predict_reg <- predict(logistic_model,
test_reg, type = "response")
predict_reg
predict_reg <- ifelse(predict_reg >0.5, 1, 0)
table(test_reg$vs, predict_reg)
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~employment_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~employee_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "1")
test_reg <- subset(salary_data, split == "0")
# Training model
logistic_model <- glm(salary_in_usd ~employee_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == 1)
test_reg <- subset(salary_data, split == 0)
# Training model
logistic_model <- glm(salary_in_usd ~employee_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == 1)
test_reg <- subset(salary_data, split == 0)
# Training model
logistic_model <- glm(salary_in_usd ~employee_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~employee_residence,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size")]
salary_data = as.factor(salary_data)
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd ~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd~.,
data = train_reg,
family = "binomial")
# Loading package
library(dplyr)
# Summary of dataset in package
summary(mtcars)
head(mtcars)
# Loading package
library(caTools)
library(ROCR)
# Splitting dataset
split <- sample.split(mtcars, SplitRatio = 0.8)
split
train_reg <- subset(mtcars, split == "TRUE")
test_reg <- subset(mtcars, split == "FALSE")
# Training model
logistic_model <- glm(vs ~ wt + disp,
data = train_reg, family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size", "remote_ratio")]
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size", "remote_ratio")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size", "remote_ratio")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size", "remote_ratio")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size", "remote_ratio")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
logistic_model <- glm(salary_in_usd~.,
data = train_reg,
family = "binomial")
library(dplyr)
library(caTools)
salary_data_raw = read.csv('~/Desktop/Applied Machine Learning/Final Project/ds_salaries.csv')
salary_data_unfiltered = salary_data_raw[, c( "work_year", "experience_level", "employment_type", "job_title", "salary_in_usd", "employee_residence", "company_size", "remote_ratio")]
salary_data = as.data.frame(salary_data_unfiltered)
#0 is less than 100,000 and 1 is >= 100,000
#Filtering out the data and making it ready for classification
salary_data_unfiltered$salary_in_usd <- ifelse(salary_data_unfiltered$salary_in_usd>=100000, 1, 0)
salary_data = subset(salary_data, employee_residence == "US" & employment_type  == "FT")
salary_data = salary_data[, c( "work_year", "experience_level", "job_title", "salary_in_usd", "company_size", "remote_ratio")]
head(salary_data)
split <- sample.split(salary_data, SplitRatio = 0.8)
split
train_reg <- subset(salary_data, split == "TRUE")
test_reg <- subset(salary_data, split == "FALSE")
# Training model
